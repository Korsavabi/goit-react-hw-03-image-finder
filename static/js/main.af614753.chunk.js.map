{"version":3,"sources":["helpers/request.js","Component/ListItem/ListItem.js","Component/SearchForm/SearchForm.js","Component/Loader/LoaderSpinner.js","Component/List/List.js","App.js","index.js"],"names":["withCredentials","url","process","request","method","a","body","axios","result","data","ListItem","images","modal","e","preventDefault","basicLightbox","target","dataset","src","alt","show","className","map","card","webformatURL","data-src","largeImageURL","onClick","type","id","SearchForm","state","search","submitHandler","props","onSubmit","setState","inputHandler","value","this","name","onChange","placeholder","Component","LoaderSpinner","color","height","width","timeout","List","loader","err","pages","perPage","message","searchQuery","loaderToggle","status","errorToggle","error","featchImages","prevState","hits","window","scrollTo","top","document","documentElement","scrollHeight","behavior","hendleSearchQuerySybmit","prevProps","length","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af614753.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const withCredentials = (url) => {\r\n    return `${url}key=${process.env.REACT_APP_CLIENT_API}`\r\n} \r\nexport const request = async ( method, url, body = null) => {\r\n    const result = await axios[method](url, body);\r\n\r\n    return result.data;\r\n}","import React from 'react';\r\nimport * as basicLightbox from 'basiclightbox';\r\nimport '../../../node_modules/basiclightbox/dist/basicLightbox.min.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListItem = ({ images }) => {\r\n    const modal = (e) => {\r\n        e.preventDefault();\r\n\r\n        const instance = basicLightbox.create(`\r\n        <div class=\"modal\">\r\n        <img src=\"${e.target.dataset.src}\" alt=\"${e.target.alt}\" class=\"js-modal-img\">\r\n        </div>\r\n    `)\r\n        instance.show()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"ImageGallery\">\r\n                {\r\n                    images.map(card => <li key={card.id}><img src={card.webformatURL} data-src={card.largeImageURL} onClick={modal} alt={card.type} className=\"ImageGalleryItem-image\" /> </li>)\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n\r\nListItem.propTypes = {\r\n    images: PropTypes\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SearchForm extends Component {\r\n    state = {\r\n        search: '',\r\n    }\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const { search } = this.state;\r\n        this.props.onSubmit(search);\r\n        this.setState({ search: '' })\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        this.setState({ search: e.target.value })\r\n    }\r\n    render() {\r\n        const { search } = this.state;\r\n\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.submitHandler}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        name='search'\r\n                        value={search}\r\n                        onChange={this.inputHandler}\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchForm;\r\n\r\nSearchForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst LoaderSpinner = () => {\r\n    return (\r\n        <div>\r\n            <Loader type=\"Bars\" color=\"#00BFFF\" height={100} width={100} timeout={15000} className=\"center\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoaderSpinner;","import React, { Component } from 'react';\r\nimport { withCredentials, request } from '../../helpers/request';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\nimport LoaderSpinner from '../Loader/LoaderSpinner';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass List extends Component {\r\n    state = {\r\n        images: [],\r\n        loader: false,\r\n        err: false,\r\n        pages: 1,\r\n        perPage: 9,\r\n        message: '',\r\n        searchQuery: ''\r\n    }\r\n\r\n    loaderToggle = (status) => {\r\n        this.setState({ loader: status })\r\n    }\r\n    errorToggle = (status) => {\r\n        this.setState({ error: status })\r\n    }\r\n    featchImages = async () => {\r\n        const { searchQuery, pages, } = this.state\r\n        const url = withCredentials(`https://pixabay.com/api/?q=${searchQuery}&image_type=photo&per_page=9&page=${pages}&`)\r\n        try {\r\n            this.loaderToggle(true)\r\n            const result = await request('get', url);\r\n            this.setState(prevState => ({\r\n                images: [...prevState.images, ...result.hits],\r\n                pages: prevState.pages + 1,\r\n            }))\r\n\r\n        } catch (error) {\r\n            this.setState({\r\n                message: 'Some Eror, try later'\r\n            })\r\n            this.errorToggle(true)\r\n            this.loaderToggle(false)\r\n\r\n        } finally {\r\n            this.loaderToggle(false)\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n\r\n    }\r\n    hendleSearchQuerySybmit = async search => {\r\n        await this.setState({ searchQuery: search, pages: 1, images: [] })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const nextSerch = this.state.searchQuery;\r\n        const prevSerch = prevState.searchQuery;\r\n\r\n        if (nextSerch !== prevSerch) {\r\n            this.featchImages();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { images, loader, error, message } = this.state;\r\n        return (\r\n            <>\r\n                <SearchForm onSubmit={this.hendleSearchQuerySybmit} />\r\n                {error && <h1>{message}</h1>}\r\n                {loader ? <LoaderSpinner /> : <ListItem images={images} />}\r\n                {!!images.length && <button type=\"button\" onClick={this.featchImages}>Load More...</button>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import './App.css';\nimport List from './Component/List/List';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}